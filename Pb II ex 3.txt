#include <stdio.h>

void quickSort( int[], int, int);
int partition( int[], int, int);


void main()
{
	int a[] = { 7, 12, 1, -2, 0, 15, 4, 11, 9};

	int i;
	printf("\n\nUnsorted array is:  ");
	for(i = 0; i < 9; ++i)
		printf(" %d ", a[i]);

	quickSort( a, 0, 8);

	printf("\n\nSorted array is:  ");
	for(i = 0; i < 9; ++i)
		printf(" %d ", a[i]);

}



void quickSort( int a[], int left, int right)
{
   int j;

   if( left < right )
   {
       j = partition( a, left, right);
       quickSort( a, left, j-1);
       quickSort( a, j+1, right);
   }

}



int partition( int a[], int left, int right) {
   int pivot, i, j, t;
   pivot = a[left];
   i = left; j = right+1;

   while( 1)
   {
   	do ++i; while( a[i] <= pivot && i <= right );
   	do --j; while( a[j] > pivot );
   	if( i >= j ) break;
    t = a[i];
    a[i] = a[j];
    a[j] = t;
   }
   t = a[left];
   a[left] = a[j];
   a[j] = t;
   return j;
}



